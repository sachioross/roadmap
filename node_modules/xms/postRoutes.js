var formidable = require("formidable");
var mailgun = require('mailgun');
var twilio = require('twilio');
var taiga = require('taiga-njs');
var nconf = require('nconf');

// [ Service and Client Setup ]
nconf.argv()
     .env()
     .file({file: __dirname + '/config.json'});

var twilioClient = new twilio.RestClient(nconf.get("twilio:sid"),
                                         nconf.get("twilio:token"));
var mgClient = new mailgun.Mailgun(nconf.get("mailgun:key"));
var taigaClient = new taiga.Client(nconf.get("taiga:key"));

// [ Routing Setup ]
var routes = {};

routes["/submit/incident"] = function(req, res) {

    var resJson = {};

    var form = new formidable.IncomingForm();

    form.parse(req, function(err, fields, files) {
        if (err) {
            console.log(err);
            res.json({status: "Error"});
        }
        resJson.emailStatus = sendIncidentEmail(fields);
        resJson.incidentCreated = createIncidentTicket(fields);
        resJson.textStatus = sendTextNotice(fields);
        res.json(resJson);
    });
};

// [ Support Related Functions ]
function sendIncidentEmail(fields) {
  var success = true;

  mgClient.sendText(nconf.get("mailgun:fromEmail"),
              nconf.get("mailgun:toEmail"),
              nconf.get("mailgun:subject"),
              createBasicText(fields),
              function(err) {
                  if (err === "undefined" || err === undefined) {
                      console.log("Message sent successfully");
                  } else {
                      console.log(err);
                  }
              });

    return success;
}

function sendTextNotice(fields) {

    var success = false;

    // TODO: Enhance to get numbers dynamically
    var msg = {
        to: nconf.get("twilio:to"),
        from: nconf.get("twilio:from"),
        body: 'New XMS Incident!\n' + createBasicText(fields)
    }

    var cb = function(error, message) {
        if (!error) {
            // TODO: Log this to a messages.log file
            console.log(message);
            success = true;
        } else {
            console.log("There was an error");
            console.log(error);
        }
    }

    twilioClient.sms.messages.create(msg, cb);
}

// TODO: Use XumaK accounts, make more robust and flexible
function createIncidentTicket(fields) {

  var issue = {
    description: createBasicText(fields),
    subject: "Incident for " + fields.client,
    project: nconf.get("taiga:projectId")
  }

  taigaClient.createIssue(issue);

  return true;
}

// [ Helper Methods ]
function createHtmlMsg(fields) {

    var htmlResponse = "<table><tr><td>Client</td><td>"
    + fields.client
    + "</td></tr><tr><td>Client Contact</td><td>"
    + fields.clientContact
    + "</td></tr><tr><td>Client Phone</td><td>"
    + fields.ClientPhone
    + "</td></tr><tr><td>Incident Description</td><td>"
    + fields.description
    + "</td></tr></table>";

    return htmlResponse;
}

function createBasicText(fields) {
    var textResp = "Client: " + fields.client
    + "\nClient Contact: " + fields.clientContact
    + "\nClient Phone: " + fields.clientPhone
    + "\nIncident Description: "+ fields.description;

    return textResp;
}


module.exports = {
    routes: routes
}
